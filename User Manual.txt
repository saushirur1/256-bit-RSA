#User Manual

The code is written in Java 8. Download the files and run the Init Class on terminal using the following commands:
1. javac Init.java
2. java Init

Init Class
--> Displays Customer,Merchant,Bank or Exit option
--> Select any one of the option, A wrong selection will display a message saying "Enter valid option"
--> Selecting Customer option will ask for a name,9 digit SSN and Money order amount.
--> "Invlid name/SSN" will be displayed if the SSN is less than 9 digits. 




Customer Class
This class has the following methods:
-->public static String UniqueID();
   This method can be called to obtain a Unique ID to be used in a money order.
   
-->int Create_Moneyorder(int orderval);
   This method takes a integer value as parameter and returns the total number of money orders created.
   ex. int x = 10;
       int z = Create_Moneyorder(x);
       System.out.println(z); // Returns the total number of money orders created
       
   
-->public void Blinding(BigInteger public_key1,BigInteger Mod) ;
   This method takes two BigIntger parameters as inputs which represent the public key and Modulus to encrypt the data.
   Used to blind the money orders using the RSA public key and Random key K1,K2,...Kn created for uniquely for each message.
   
   
-->ArrayList<BigInteger> Unblindkey(int unblind_var);
-->void Secret_Split();
-->String Bit_commit();
-->public ArrayList<byte[]> get_Encrypted();
-->public ArrayList<byte[]> challenge_merchant(String chal);



Bank Class
This class contains the following methods:
-->public int to_selectorder();
-->public String unblindingmoney(ArrayList<BigInteger> a1, ArrayList<byte[]> a2,BigInteger e1, BigInteger n1);
-->private void writing_id()throws IOException;
-->public boolean ID_check(String idtocheck);
-->public boolean money_check();
-->public byte[] Signature();
-->public String Reveal_Identity();


Merchant Class
-->public String challenge();
-->public boolean tocheckhash(ArrayList<byte[]> temp_2)throws IOException;
-->public String received_orderfromCustomer(byte[] received,BigInteger public_key1,BigInteger Mod);
